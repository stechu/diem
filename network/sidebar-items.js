initSidebarItems({"mod":[["connectivity_manager","The ConnectivityManager actor is responsible for ensuring that we are connected to a node if and only if it is an eligible node."],["constants",""],["counters",""],["error",""],["fuzzing",""],["interface","Module exposing generic network interface to a single connected peer."],["logging","This module is to contain all networking logging information."],["noise","This crate implements wrappers around our Noise implementation. Noise is a protocol framework to encrypt and authentication connections. We use Noise to secure connections between peers in Diem. Specifically, we use the Noise IK handshake which is a one round-trip protocol (the client sends one message, then the server responds). For more information about Noise and our implementation, refer to the crypto crate."],["peer","Peer manages a single connection to a remote peer after the initial connection establishment and handshake, including sending and receiving `NetworkMessage`s over-the-wire, maintaining a completion queue of pending RPC requests, and eventually shutting down when the PeerManager requests it or the connection is lost."],["peer_manager","The PeerManager module is responsible for establishing connections between Peers and for opening/receiving new substreams on those connections."],["protocols","Protocols used by network module for external APIs and internal functionality"],["testutils",""],["transport",""]],"type":[["ConnectivityRequest",""],["DisconnectReason",""],["ProtocolId",""]]});